<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.3</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.Novel</groupId>
	<artifactId>VirtualBookStore</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Virtual Book Store</name>
	<description>Develop a user-friendly and efficient virtual platform where
		book admirers can explore, select and purchase books. This platform will
		replicate the experience of visiting a physical bookstore in a digital
		environment, it will give an engaging space where users can have a
		Digital Book Exploration, Easy selection of books as per their interest
		they can have detailed book information, and can have a hassle-free
		shopping of their choice. The Virtual Bookstore project aims to
		replicate the experience of browsing and buying books online by taking
		more than enough information about the particular book, this process of
		exploring and purchasing books online will give a feel to users just as
		one would in a physical bookstore. Users will search for books, add them
		to their shopping cart, and will proceed to checkout. This application
		provides an engaging and user-friendly interface for bookaholics.
		Recommendation System: Implement a book recommendation engine based on
		user preferences, previous purchases, or ratings. You can use simple
		algorithms like collaborative filtering or even machine learning models
		for better recommendations. User Reviews and Ratings: Allow users to
		rate books and write reviews. This will add an extra layer of engagement
		to the platform. Payment Integration: Add integration with payment
		gateways (e.g., Stripe, PayPal) to make the purchase process more
		realistic.</description>
	<url />
	<licenses>
		<license />
	</licenses>
	<developers>
		<developer />
	</developers>
	<scm>
		<connection />
		<developerConnection />
		<tag />
		<url />
	</scm>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>

			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
		</dependency>
		<!--
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
	
	
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.12.6</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.12.6</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.12.6</version>
			<scope>runtime</scope>
		</dependency>
	
 -->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
